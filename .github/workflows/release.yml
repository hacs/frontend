name: "Release actions"

on:
  release:
    types:
      - published

env:
  NODE_VERSION: 18
  PYTHON_VERSION: "3.x"

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  translations:
    runs-on: ubuntu-latest
    steps:
      - name: Set up the Lokalise CLI
        uses: frenck/action-setup-lokalise@3b7316ecd78de134098918affa9cb7e7664888a5 # v1.0.1
        with:
          version: v2.6.10

      - name: Download translations
        run: |
          lokalise2 \
            --token "${{ secrets.lokalise_token }}" \
            --project-id "854515055f679055040b37.42677693" \
            file download \
            --format json \
            --unzip-to ./translations \
            --export-empty-as skip \
            --export-sort a_z \
            --original-filenames=false  \
            --bundle-structure %LANG_ISO%.%FORMAT%

      - name: Upload dists
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: translations
          path: ./translations
          if-no-files-found: error
          retention-days: 1

  build:
    runs-on: ubuntu-latest
    needs: translations
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          cache: yarn
          node-version: ${{ env.NODE_VERSION }}

      - name: Clear target directory
        run: |
          rm -R ./src/localize/languages/
          mkdir -p ./src/localize/languages/

      - name: Download translations
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: translations
          path: "./src/localize/languages/"

      - name: "Set version number"
        run: |
          export version=${{ github.event.release.tag_name }}
          sed -i "s|main|${version##*/}|" ./setup.py
          sed -i "s|main|${version##*/}|" ./public/version.py
          sed -i "s|main|${version##*/}|" ./src/version.ts

          cat ./setup.py
          cat ./public/version.py
          cat ./src/version.ts

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          script/bootstrap

      - name: Build
        run: script/build

      - name: Package
        run: python setup.py sdist bdist_wheel

      - name: Upload dists
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "dist"
          path: "dist/"
          if-no-files-found: error
          retention-days: 5

  publish:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: release
      url: https://pypi.org/p/hacs-frontend
    permissions:
      attestations: write
      contents: write
      id-token: write
    steps:
      - name: Download dists
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: "dist"
          path: "dist/"

      - name: Publish dists to PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0

      - name: Attest
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a #v3.0.0
        with:
          subject-path: dist/*

      - name: Upload release assets
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        with:
          files: dist/*

  notify:
    runs-on: ubuntu-latest
    name: Trigger Discord notification
    needs: publish
    steps:
      - name: Discord notification
        run: |
          curl \
            -H "Content-Type: application/json" \
            -d '{"username": "GitHub Action", "content": "New version of HACS frontend are now pushed to [PyPi](<https://pypi.org/project/hacs-frontend>)"}' \
            ${{ secrets.DISCORD_WEBHOOK }}